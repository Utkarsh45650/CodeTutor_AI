{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\utkar\\\\Desktop\\\\SkillCred Projects\\\\AI_tutor\\\\frontend\\\\src\\\\components\\\\Compiler\\\\CodeEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport apiService from '../../utils/api';\nimport styles from './CodeEditor.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CodeEditor = ({\n  language,\n  onResult\n}) => {\n  _s();\n  const [code, setCode] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState(null);\n  const handleRunCode = async () => {\n    if (!code.trim()) {\n      alert('Please enter some code to run');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await apiService.runCode(code, language.toLowerCase());\n      setResult(response);\n      if (onResult) {\n        onResult(response);\n      }\n    } catch (error) {\n      setResult({\n        success: false,\n        output: '',\n        error: error.message\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getPlaceholder = () => {\n    const placeholders = {\n      'c': `#include <stdio.h>\n\nint main() {\n    printf(\"Hello, World!\\\\n\");\n    return 0;\n}`,\n      'c++': `#include <iostream>\nusing namespace std;\n\nint main() {\n    cout << \"Hello, World!\" << endl;\n    return 0;\n}`,\n      'java': `public class Main {\n    public static void main(String[] args) {\n        System.out.println(\"Hello, World!\");\n    }\n}`,\n      'python': `print(\"Hello, World!\")`,\n      'c#': `using System;\n\nclass Program {\n    static void Main() {\n        Console.WriteLine(\"Hello, World!\");\n    }\n}`\n    };\n    return placeholders[language.toLowerCase()] || 'Enter your code here...';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.codeEditor,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.editorHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Code Editor - \", language]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRunCode,\n        disabled: loading,\n        className: \"btn btn-primary\",\n        children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), \"Running...\"]\n        }, void 0, true) : '▶️ Run Code'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: code,\n      onChange: e => setCode(e.target.value),\n      placeholder: getPlaceholder(),\n      className: styles.codeTextarea,\n      spellCheck: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.resultSection,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Output:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.resultBox} ${result.success ? styles.success : styles.error}`,\n        children: result.success ? /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: result.output || 'Program executed successfully (no output)'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: styles.errorText,\n          children: result.error || 'An error occurred while running the code'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeEditor, \"SrkZHHsCyE6oSvvIaAVGJmXVuzQ=\");\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useState","apiService","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","CodeEditor","language","onResult","_s","code","setCode","loading","setLoading","result","setResult","handleRunCode","trim","alert","response","runCode","toLowerCase","error","success","output","message","getPlaceholder","placeholders","className","codeEditor","children","editorHeader","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","value","onChange","e","target","placeholder","codeTextarea","spellCheck","resultSection","resultBox","errorText","_c","$RefreshReg$"],"sources":["C:/Users/utkar/Desktop/SkillCred Projects/AI_tutor/frontend/src/components/Compiler/CodeEditor.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport apiService from '../../utils/api';\r\nimport styles from './CodeEditor.module.css';\r\n\r\nconst CodeEditor = ({ language, onResult }) => {\r\n  const [code, setCode] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [result, setResult] = useState(null);\r\n\r\n  const handleRunCode = async () => {\r\n    if (!code.trim()) {\r\n      alert('Please enter some code to run');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await apiService.runCode(code, language.toLowerCase());\r\n      setResult(response);\r\n      if (onResult) {\r\n        onResult(response);\r\n      }\r\n    } catch (error) {\r\n      setResult({\r\n        success: false,\r\n        output: '',\r\n        error: error.message\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getPlaceholder = () => {\r\n    const placeholders = {\r\n      'c': `#include <stdio.h>\r\n\r\nint main() {\r\n    printf(\"Hello, World!\\\\n\");\r\n    return 0;\r\n}`,\r\n      'c++': `#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    cout << \"Hello, World!\" << endl;\r\n    return 0;\r\n}`,\r\n      'java': `public class Main {\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Hello, World!\");\r\n    }\r\n}`,\r\n      'python': `print(\"Hello, World!\")`,\r\n      'c#': `using System;\r\n\r\nclass Program {\r\n    static void Main() {\r\n        Console.WriteLine(\"Hello, World!\");\r\n    }\r\n}`\r\n    };\r\n    \r\n    return placeholders[language.toLowerCase()] || 'Enter your code here...';\r\n  };\r\n\r\n  return (\r\n    <div className={styles.codeEditor}>\r\n      <div className={styles.editorHeader}>\r\n        <h3>Code Editor - {language}</h3>\r\n        <button \r\n          onClick={handleRunCode}\r\n          disabled={loading}\r\n          className=\"btn btn-primary\"\r\n        >\r\n          {loading ? (\r\n            <>\r\n              <span className=\"loading-spinner\"></span>\r\n              Running...\r\n            </>\r\n          ) : (\r\n            '▶️ Run Code'\r\n          )}\r\n        </button>\r\n      </div>\r\n\r\n      <textarea\r\n        value={code}\r\n        onChange={(e) => setCode(e.target.value)}\r\n        placeholder={getPlaceholder()}\r\n        className={styles.codeTextarea}\r\n        spellCheck={false}\r\n      />\r\n\r\n      {result && (\r\n        <div className={styles.resultSection}>\r\n          <h4>Output:</h4>\r\n          <div className={`${styles.resultBox} ${result.success ? styles.success : styles.error}`}>\r\n            {result.success ? (\r\n              <pre>{result.output || 'Program executed successfully (no output)'}</pre>\r\n            ) : (\r\n              <pre className={styles.errorText}>\r\n                {result.error || 'An error occurred while running the code'}\r\n              </pre>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}