{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\utkar\\\\Desktop\\\\SkillCred Projects\\\\AI_tutor\\\\frontend\\\\src\\\\components\\\\Quiz\\\\QuizInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport apiService from '../../utils/api';\nimport CodeEditor from '../Compiler/CodeEditor';\nimport styles from './QuizInterface.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizInterface = () => {\n  _s();\n  var _currentQuestionData$;\n  const {\n    language,\n    topic\n  } = useParams();\n  const navigate = useNavigate();\n  const [quiz, setQuiz] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [difficulty, setDifficulty] = useState('Easy');\n  const [quizStarted, setQuizStarted] = useState(false);\n  useEffect(() => {\n    if (quizStarted && timeLeft > 0) {\n      const timer = setTimeout(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n      return () => clearTimeout(timer);\n    } else if (timeLeft === 0 && quizStarted) {\n      handleSubmitQuiz();\n    }\n  }, [timeLeft, quizStarted]);\n  const startQuiz = async () => {\n    try {\n      setLoading(true);\n      const response = await apiService.generateQuiz(language, topic, difficulty);\n      setQuiz(response);\n      setAnswers(new Array(response.questions.length).fill(''));\n      setTimeLeft(response.time_limit * 60); // Convert minutes to seconds\n      setQuizStarted(true);\n    } catch (error) {\n      setError('Failed to generate quiz');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAnswerChange = value => {\n    const newAnswers = [...answers];\n    newAnswers[currentQuestion] = value;\n    setAnswers(newAnswers);\n  };\n  const handleNext = () => {\n    if (currentQuestion < quiz.questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    }\n  };\n  const handlePrevious = () => {\n    if (currentQuestion > 0) {\n      setCurrentQuestion(currentQuestion - 1);\n    }\n  };\n  const handleSubmitQuiz = async () => {\n    try {\n      const response = await apiService.submitQuiz(quiz.quiz_id, answers, language, topic, difficulty);\n\n      // Update progress if quiz is passed\n      if (response.passed) {\n        await apiService.updateProgress(language, topic, response.score);\n      }\n      navigate('/quiz-results', {\n        state: {\n          results: response,\n          language,\n          topic,\n          difficulty\n        }\n      });\n    } catch (error) {\n      setError('Failed to submit quiz');\n    }\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  const getCurrentQuestion = () => {\n    return quiz === null || quiz === void 0 ? void 0 : quiz.questions[currentQuestion];\n  };\n  if (!quizStarted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.quizSetup,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.setupCard,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Quiz Setup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Ready to test your knowledge of \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: topic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 48\n            }, this), \" in \", language, \"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.difficultySelection,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Select Difficulty Level:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.difficultyOptions,\n              children: ['Easy', 'Medium', 'Hard', 'Nightmare'].map(level => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setDifficulty(level),\n                className: `btn ${difficulty === level ? 'btn-primary' : 'btn-secondary'}`,\n                children: level\n              }, level, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.difficultyInfo,\n              children: [difficulty === 'Easy' && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\uD83D\\uDFE2 Basic multiple-choice questions on fundamental concepts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), difficulty === 'Medium' && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\uD83D\\uDFE1 Advanced MCQs + one coding problem\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this), difficulty === 'Hard' && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\uD83D\\uDFE0 Complex MCQs + multiple coding problems\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this), difficulty === 'Nightmare' && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\uD83D\\uDD34 In-depth MCQs + complex coding + debugging challenges\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.setupActions,\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/dashboard\",\n              className: \"btn btn-secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: startQuiz,\n              disabled: loading,\n              className: \"btn btn-primary\",\n              children: loading ? 'Generating Quiz...' : 'Start Quiz'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loadingContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading quiz...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  }\n  const currentQuestionData = getCurrentQuestion();\n  const progress = (currentQuestion + 1) / quiz.questions.length * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.quizInterface,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: styles.header,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.quizInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [language, \" - \", topic, \" Quiz\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.difficulty,\n            children: [\"Difficulty: \", difficulty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.timer,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: timeLeft < 300 ? styles.timerWarning : '',\n            children: [\"\\u23F0 \", formatTime(timeLeft)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progressSection,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.progressBar,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.progressFill,\n            style: {\n              width: `${progress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.progressText,\n          children: [\"Question \", currentQuestion + 1, \" of \", quiz.questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: styles.questionSection,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.questionCard,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: styles.questionTitle,\n            children: [(currentQuestionData === null || currentQuestionData === void 0 ? void 0 : currentQuestionData.type) === 'mcq' && '📝', (currentQuestionData === null || currentQuestionData === void 0 ? void 0 : currentQuestionData.type) === 'coding' && '💻', (currentQuestionData === null || currentQuestionData === void 0 ? void 0 : currentQuestionData.type) === 'debugging' && '🐛', \"Question \", currentQuestion + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.questionText,\n            children: currentQuestionData === null || currentQuestionData === void 0 ? void 0 : currentQuestionData.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), (currentQuestionData === null || currentQuestionData === void 0 ? void 0 : currentQuestionData.type) === 'mcq' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.mcqOptions,\n            children: (_currentQuestionData$ = currentQuestionData.options) === null || _currentQuestionData$ === void 0 ? void 0 : _currentQuestionData$.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAnswerChange(index),\n              className: `${styles.optionButton} ${answers[currentQuestion] === index ? styles.selected : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.optionLabel,\n                children: String.fromCharCode(65 + index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 21\n              }, this), option]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), ((currentQuestionData === null || currentQuestionData === void 0 ? void 0 : currentQuestionData.type) === 'coding' || (currentQuestionData === null || currentQuestionData === void 0 ? void 0 : currentQuestionData.type) === 'debugging') && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.codingSection,\n            children: [/*#__PURE__*/_jsxDEV(CodeEditor, {\n              language: language,\n              onResult: result => {\n                // Store the code as the answer\n                handleAnswerChange(result.success ? 'correct' : 'incorrect');\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: answers[currentQuestion] || '',\n              onChange: e => handleAnswerChange(e.target.value),\n              placeholder: \"Enter your code solution here...\",\n              className: styles.codeAnswer,\n              rows: 10\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: styles.navigation,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevious,\n          disabled: currentQuestion === 0,\n          className: \"btn btn-secondary\",\n          children: \"\\u2190 Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.questionIndicators,\n          children: quiz.questions.map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCurrentQuestion(index),\n            className: `${styles.indicator} ${index === currentQuestion ? styles.current : ''} ${answers[index] !== '' ? styles.answered : ''}`,\n            children: index + 1\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), currentQuestion === quiz.questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmitQuiz,\n          className: \"btn btn-success\",\n          children: \"Submit Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNext,\n          className: \"btn btn-primary\",\n          children: \"Next \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizInterface, \"Yh1eynqdg+hdKJRgOOipxGMbZXk=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuizInterface;\nexport default QuizInterface;\nvar _c;\n$RefreshReg$(_c, \"QuizInterface\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","useNavigate","apiService","CodeEditor","styles","jsxDEV","_jsxDEV","QuizInterface","_s","_currentQuestionData$","language","topic","navigate","quiz","setQuiz","currentQuestion","setCurrentQuestion","answers","setAnswers","timeLeft","setTimeLeft","loading","setLoading","error","setError","difficulty","setDifficulty","quizStarted","setQuizStarted","timer","setTimeout","clearTimeout","handleSubmitQuiz","startQuiz","response","generateQuiz","Array","questions","length","fill","time_limit","handleAnswerChange","value","newAnswers","handleNext","handlePrevious","submitQuiz","quiz_id","passed","updateProgress","score","state","results","formatTime","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","getCurrentQuestion","className","quizSetup","children","setupCard","fileName","_jsxFileName","lineNumber","columnNumber","difficultySelection","difficultyOptions","map","level","onClick","difficultyInfo","setupActions","to","disabled","loadingContainer","currentQuestionData","progress","quizInterface","header","quizInfo","timerWarning","progressSection","progressBar","progressFill","style","width","progressText","questionSection","questionCard","questionTitle","type","questionText","question","mcqOptions","options","option","index","optionButton","selected","optionLabel","String","fromCharCode","codingSection","onResult","result","success","onChange","e","target","placeholder","codeAnswer","rows","navigation","questionIndicators","_","indicator","current","answered","_c","$RefreshReg$"],"sources":["C:/Users/utkar/Desktop/SkillCred Projects/AI_tutor/frontend/src/components/Quiz/QuizInterface.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link, useNavigate } from 'react-router-dom';\r\nimport apiService from '../../utils/api';\r\nimport CodeEditor from '../Compiler/CodeEditor';\r\nimport styles from './QuizInterface.module.css';\r\n\r\nconst QuizInterface = () => {\r\n  const { language, topic } = useParams();\r\n  const navigate = useNavigate();\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [timeLeft, setTimeLeft] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [difficulty, setDifficulty] = useState('Easy');\r\n  const [quizStarted, setQuizStarted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (quizStarted && timeLeft > 0) {\r\n      const timer = setTimeout(() => {\r\n        setTimeLeft(timeLeft - 1);\r\n      }, 1000);\r\n      return () => clearTimeout(timer);\r\n    } else if (timeLeft === 0 && quizStarted) {\r\n      handleSubmitQuiz();\r\n    }\r\n  }, [timeLeft, quizStarted]);\r\n\r\n  const startQuiz = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await apiService.generateQuiz(language, topic, difficulty);\r\n      setQuiz(response);\r\n      setAnswers(new Array(response.questions.length).fill(''));\r\n      setTimeLeft(response.time_limit * 60); // Convert minutes to seconds\r\n      setQuizStarted(true);\r\n    } catch (error) {\r\n      setError('Failed to generate quiz');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAnswerChange = (value) => {\r\n    const newAnswers = [...answers];\r\n    newAnswers[currentQuestion] = value;\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (currentQuestion < quiz.questions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentQuestion > 0) {\r\n      setCurrentQuestion(currentQuestion - 1);\r\n    }\r\n  };\r\n\r\n  const handleSubmitQuiz = async () => {\r\n    try {\r\n      const response = await apiService.submitQuiz(\r\n        quiz.quiz_id,\r\n        answers,\r\n        language,\r\n        topic,\r\n        difficulty\r\n      );\r\n      \r\n      // Update progress if quiz is passed\r\n      if (response.passed) {\r\n        await apiService.updateProgress(language, topic, response.score);\r\n      }\r\n      \r\n      navigate('/quiz-results', { \r\n        state: { \r\n          results: response,\r\n          language,\r\n          topic,\r\n          difficulty \r\n        } \r\n      });\r\n    } catch (error) {\r\n      setError('Failed to submit quiz');\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const getCurrentQuestion = () => {\r\n    return quiz?.questions[currentQuestion];\r\n  };\r\n\r\n  if (!quizStarted) {\r\n    return (\r\n      <div className={styles.quizSetup}>\r\n        <div className=\"page-container\">\r\n          <div className={styles.setupCard}>\r\n            <h1>Quiz Setup</h1>\r\n            <p>Ready to test your knowledge of <strong>{topic}</strong> in {language}?</p>\r\n            \r\n            <div className={styles.difficultySelection}>\r\n              <h3>Select Difficulty Level:</h3>\r\n              <div className={styles.difficultyOptions}>\r\n                {['Easy', 'Medium', 'Hard', 'Nightmare'].map(level => (\r\n                  <button\r\n                    key={level}\r\n                    onClick={() => setDifficulty(level)}\r\n                    className={`btn ${difficulty === level ? 'btn-primary' : 'btn-secondary'}`}\r\n                  >\r\n                    {level}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n              \r\n              <div className={styles.difficultyInfo}>\r\n                {difficulty === 'Easy' && (\r\n                  <p>🟢 Basic multiple-choice questions on fundamental concepts</p>\r\n                )}\r\n                {difficulty === 'Medium' && (\r\n                  <p>🟡 Advanced MCQs + one coding problem</p>\r\n                )}\r\n                {difficulty === 'Hard' && (\r\n                  <p>🟠 Complex MCQs + multiple coding problems</p>\r\n                )}\r\n                {difficulty === 'Nightmare' && (\r\n                  <p>🔴 In-depth MCQs + complex coding + debugging challenges</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n            \r\n            {error && (\r\n              <div className=\"error-message\">\r\n                {error}\r\n              </div>\r\n            )}\r\n            \r\n            <div className={styles.setupActions}>\r\n              <Link to=\"/dashboard\" className=\"btn btn-secondary\">\r\n                Cancel\r\n              </Link>\r\n              <button \r\n                onClick={startQuiz}\r\n                disabled={loading}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                {loading ? 'Generating Quiz...' : 'Start Quiz'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className={styles.loadingContainer}>\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Loading quiz...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const currentQuestionData = getCurrentQuestion();\r\n  const progress = ((currentQuestion + 1) / quiz.questions.length) * 100;\r\n\r\n  return (\r\n    <div className={styles.quizInterface}>\r\n      <div className=\"page-container\">\r\n        <header className={styles.header}>\r\n          <div className={styles.quizInfo}>\r\n            <h1>{language} - {topic} Quiz</h1>\r\n            <span className={styles.difficulty}>Difficulty: {difficulty}</span>\r\n          </div>\r\n          \r\n          <div className={styles.timer}>\r\n            <span className={timeLeft < 300 ? styles.timerWarning : ''}>\r\n              ⏰ {formatTime(timeLeft)}\r\n            </span>\r\n          </div>\r\n        </header>\r\n\r\n        <div className={styles.progressSection}>\r\n          <div className={styles.progressBar}>\r\n            <div \r\n              className={styles.progressFill}\r\n              style={{ width: `${progress}%` }}\r\n            ></div>\r\n          </div>\r\n          <span className={styles.progressText}>\r\n            Question {currentQuestion + 1} of {quiz.questions.length}\r\n          </span>\r\n        </div>\r\n\r\n        <main className={styles.questionSection}>\r\n          <div className={styles.questionCard}>\r\n            <h2 className={styles.questionTitle}>\r\n              {currentQuestionData?.type === 'mcq' && '📝'}\r\n              {currentQuestionData?.type === 'coding' && '💻'}\r\n              {currentQuestionData?.type === 'debugging' && '🐛'}\r\n              Question {currentQuestion + 1}\r\n            </h2>\r\n            \r\n            <p className={styles.questionText}>\r\n              {currentQuestionData?.question}\r\n            </p>\r\n\r\n            {currentQuestionData?.type === 'mcq' && (\r\n              <div className={styles.mcqOptions}>\r\n                {currentQuestionData.options?.map((option, index) => (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => handleAnswerChange(index)}\r\n                    className={`${styles.optionButton} ${\r\n                      answers[currentQuestion] === index ? styles.selected : ''\r\n                    }`}\r\n                  >\r\n                    <span className={styles.optionLabel}>\r\n                      {String.fromCharCode(65 + index)}\r\n                    </span>\r\n                    {option}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            {(currentQuestionData?.type === 'coding' || currentQuestionData?.type === 'debugging') && (\r\n              <div className={styles.codingSection}>\r\n                <CodeEditor\r\n                  language={language}\r\n                  onResult={(result) => {\r\n                    // Store the code as the answer\r\n                    handleAnswerChange(result.success ? 'correct' : 'incorrect');\r\n                  }}\r\n                />\r\n                <textarea\r\n                  value={answers[currentQuestion] || ''}\r\n                  onChange={(e) => handleAnswerChange(e.target.value)}\r\n                  placeholder=\"Enter your code solution here...\"\r\n                  className={styles.codeAnswer}\r\n                  rows={10}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </main>\r\n\r\n        <footer className={styles.navigation}>\r\n          <button\r\n            onClick={handlePrevious}\r\n            disabled={currentQuestion === 0}\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            ← Previous\r\n          </button>\r\n          \r\n          <div className={styles.questionIndicators}>\r\n            {quiz.questions.map((_, index) => (\r\n              <button\r\n                key={index}\r\n                onClick={() => setCurrentQuestion(index)}\r\n                className={`${styles.indicator} ${\r\n                  index === currentQuestion ? styles.current : ''\r\n                } ${\r\n                  answers[index] !== '' ? styles.answered : ''\r\n                }`}\r\n              >\r\n                {index + 1}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          \r\n          {currentQuestion === quiz.questions.length - 1 ? (\r\n            <button\r\n              onClick={handleSubmitQuiz}\r\n              className=\"btn btn-success\"\r\n            >\r\n              Submit Quiz\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={handleNext}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Next →\r\n            </button>\r\n          )}\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}