{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\utkar\\\\Desktop\\\\SkillCred Projects\\\\AI_tutor\\\\frontend\\\\src\\\\components\\\\Quiz\\\\QuizInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport apiService from '../../utils/api';\nimport styles from './QuizInterface_enhanced.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizInterface = () => {\n  _s();\n  const {\n    language,\n    topic\n  } = useParams();\n\n  // Quiz state\n  const [quiz, setQuiz] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [quizResults, setQuizResults] = useState(null);\n\n  // UI state\n  const [phase, setPhase] = useState('setup'); // setup, generating, active, completed, results\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Quiz configuration\n  const [difficulty, setDifficulty] = useState('Easy');\n  const [numQuestions, setNumQuestions] = useState(5);\n\n  // Timer effect\n  useEffect(() => {\n    if (phase === 'active' && timeLeft > 0) {\n      const timer = setTimeout(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n      return () => clearTimeout(timer);\n    } else if (timeLeft === 0 && phase === 'active') {\n      handleSubmitQuiz();\n    }\n  }, [timeLeft, phase]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const generateQuiz = async () => {\n    try {\n      setPhase('generating');\n      setLoading(true);\n      setError('');\n      const response = await apiService.generateQuiz(language, topic, difficulty, numQuestions);\n      if (response.success) {\n        setQuiz(response);\n        setAnswers(new Array(response.questions.length).fill(''));\n        setTimeLeft(response.time_limit * 60); // Convert minutes to seconds\n        setPhase('active');\n      } else {\n        throw new Error('Failed to generate quiz');\n      }\n    } catch (error) {\n      setError(error.message || 'Failed to generate quiz. Please try again.');\n      setPhase('setup');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAnswerChange = value => {\n    const newAnswers = [...answers];\n    newAnswers[currentQuestion] = value;\n    setAnswers(newAnswers);\n  };\n  const nextQuestion = () => {\n    if (currentQuestion < quiz.questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    }\n  };\n  const previousQuestion = () => {\n    if (currentQuestion > 0) {\n      setCurrentQuestion(currentQuestion - 1);\n    }\n  };\n  const handleSubmitQuiz = async () => {\n    try {\n      setPhase('completed');\n      setLoading(true);\n      const response = await apiService.submitQuiz(quiz.quiz_id, answers, language, topic, difficulty);\n      setQuizResults(response);\n      setPhase('results');\n    } catch (error) {\n      setError('Failed to submit quiz. Please try again.');\n      setPhase('active');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  const getDifficultyColor = diff => {\n    const colors = {\n      'Easy': '#4CAF50',\n      'Medium': '#FF9800',\n      'Hard': '#F44336',\n      'Expert': '#9C27B0'\n    };\n    return colors[diff] || '#666';\n  };\n  const restartQuiz = () => {\n    setQuiz(null);\n    setCurrentQuestion(0);\n    setAnswers([]);\n    setTimeLeft(0);\n    setQuizResults(null);\n    setPhase('setup');\n    setError('');\n  };\n\n  // Setup Phase\n  if (phase === 'setup') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.header,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/dashboard`,\n          className: styles.backLink,\n          children: \"\\u2190 Back to Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.title,\n          children: \"Quiz Setup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.setupCard,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.topicInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [language, \" - \", topic]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Configure your quiz settings below:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.configSection,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.configGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: styles.configLabel,\n              children: \"Difficulty Level:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.difficultyOptions,\n              children: ['Easy', 'Medium', 'Hard', 'Expert'].map(level => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `${styles.difficultyBtn} ${difficulty === level ? styles.active : ''}`,\n                onClick: () => setDifficulty(level),\n                style: {\n                  borderColor: difficulty === level ? getDifficultyColor(level) : '#ddd',\n                  backgroundColor: difficulty === level ? getDifficultyColor(level) : 'transparent',\n                  color: difficulty === level ? 'white' : getDifficultyColor(level)\n                },\n                children: level\n              }, level, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.difficultyDescription,\n              children: [difficulty === 'Easy' && 'Basic concepts with simple multiple choice questions', difficulty === 'Medium' && 'Intermediate concepts with mixed question types', difficulty === 'Hard' && 'Advanced concepts requiring deeper understanding', difficulty === 'Expert' && 'Complex problems testing mastery of the topic']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.configGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: styles.configLabel,\n              children: \"Number of Questions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: styles.questionSelect,\n              value: numQuestions,\n              onChange: e => setNumQuestions(parseInt(e.target.value)),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 3,\n                children: \"3 Questions (Quick)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 5,\n                children: \"5 Questions (Standard)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 8,\n                children: \"8 Questions (Comprehensive)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 10,\n                children: \"10 Questions (Extended)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.timeEstimate,\n              children: [\"Estimated time: \", numQuestions * (difficulty === 'Easy' ? 2 : difficulty === 'Medium' ? 3 : difficulty === 'Hard' ? 5 : 8) / 60 * 100 / 100, \" minutes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.generateBtn,\n          onClick: generateQuiz,\n          disabled: loading,\n          children: loading ? 'Generating Quiz...' : 'Generate Quiz'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.error,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Generating Phase\n  if (phase === 'generating') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loadingCard,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.spinner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Generating Your Quiz...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Creating \", numQuestions, \" \", difficulty.toLowerCase(), \" questions about \", topic]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.loadingProgress,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.progressBar,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.progressFill\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Active Quiz Phase\n  if (phase === 'active' && quiz) {\n    const question = quiz.questions[currentQuestion];\n    const progress = (currentQuestion + 1) / quiz.questions.length * 100;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.quizHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.quizInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [quiz.language, \" - \", quiz.topic]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.difficulty,\n            style: {\n              color: getDifficultyColor(quiz.difficulty)\n            },\n            children: quiz.difficulty\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.quizMeta,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.timer,\n            children: [\"\\u23F1\\uFE0F \", formatTime(timeLeft)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.questionCounter,\n            children: [currentQuestion + 1, \" / \", quiz.questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progressContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.progressBar,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.progressFill,\n            style: {\n              width: `${progress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questionCard,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.questionHeader,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.questionNumber,\n            children: [\"Question \", currentQuestion + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.questionType,\n            children: question.type.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.questionText,\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), question.type === 'mcq' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.optionsContainer,\n          children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.optionLabel,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question-${currentQuestion}`,\n              value: index,\n              checked: answers[currentQuestion] === index,\n              onChange: () => handleAnswerChange(index),\n              className: styles.optionRadio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.optionText,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), question.type === 'coding' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.codingContainer,\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: styles.codeTextarea,\n            placeholder: \"Write your code here...\",\n            value: answers[currentQuestion] || '',\n            onChange: e => handleAnswerChange(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.navigationButtons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.navBtn,\n          onClick: previousQuestion,\n          disabled: currentQuestion === 0,\n          children: \"\\u2190 Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), currentQuestion === quiz.questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.submitBtn,\n          onClick: handleSubmitQuiz,\n          children: \"Submit Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.navBtn,\n          onClick: nextQuestion,\n          children: \"Next \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Results Phase\n  if (phase === 'results' && quizResults) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.resultsCard,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.resultsHeader,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Quiz Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.scoreDisplay,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.mainScore,\n              children: [quizResults.score, \" / \", quizResults.total_questions]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.percentage,\n              children: [quizResults.percentage, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${styles.passStatus} ${quizResults.passed ? styles.passed : styles.failed}`,\n              children: quizResults.passed ? '✅ Passed' : '❌ Failed'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.performanceSection,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Performance: \", quizResults.performance_level]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.recommendations,\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Recommendations:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: quizResults.recommendations.map((rec, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: rec\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.detailedResults,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Question Review:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), quizResults.detailed_results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${styles.questionResult} ${result.is_correct ? styles.correct : styles.incorrect}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.questionResultHeader,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Question \", result.question_number]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.resultIcon,\n                children: result.is_correct ? '✅' : '❌'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.questionResultText,\n              children: result.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this), result.options && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.answerComparison,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Your answer: \", result.options[result.user_answer]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Correct answer: \", result.options[result.correct_answer]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.explanation,\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Explanation:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 19\n              }, this), \" \", result.explanation]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.resultsActions,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.actionBtn,\n            onClick: restartQuiz,\n            children: \"Take Quiz Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/tutor/${language}/${encodeURIComponent(topic)}`,\n            className: styles.actionBtn,\n            children: \"Review Tutorial\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/dashboard\",\n            className: styles.actionBtn,\n            children: \"Back to Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Loading state\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loadingCard,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.spinner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading quiz...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 413,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizInterface, \"wtMGO8wZbY/ITc+90XY7Pl6qcjo=\", false, function () {\n  return [useParams];\n});\n_c = QuizInterface;\nexport default QuizInterface;\nvar _c;\n$RefreshReg$(_c, \"QuizInterface\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","apiService","styles","jsxDEV","_jsxDEV","QuizInterface","_s","language","topic","quiz","setQuiz","currentQuestion","setCurrentQuestion","answers","setAnswers","timeLeft","setTimeLeft","quizResults","setQuizResults","phase","setPhase","loading","setLoading","error","setError","difficulty","setDifficulty","numQuestions","setNumQuestions","timer","setTimeout","clearTimeout","handleSubmitQuiz","generateQuiz","response","success","Array","questions","length","fill","time_limit","Error","message","handleAnswerChange","value","newAnswers","nextQuestion","previousQuestion","submitQuiz","quiz_id","formatTime","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","getDifficultyColor","diff","colors","restartQuiz","className","container","children","header","to","backLink","fileName","_jsxFileName","lineNumber","columnNumber","title","setupCard","topicInfo","configSection","configGroup","configLabel","difficultyOptions","map","level","difficultyBtn","active","onClick","style","borderColor","backgroundColor","color","difficultyDescription","questionSelect","onChange","e","parseInt","target","timeEstimate","generateBtn","disabled","loadingCard","spinner","toLowerCase","loadingProgress","progressBar","progressFill","question","progress","quizHeader","quizInfo","quizMeta","questionCounter","progressContainer","width","questionCard","questionHeader","questionNumber","questionType","type","toUpperCase","questionText","optionsContainer","options","option","index","optionLabel","name","checked","optionRadio","optionText","codingContainer","codeTextarea","placeholder","navigationButtons","navBtn","submitBtn","resultsCard","resultsHeader","scoreDisplay","mainScore","score","total_questions","percentage","passStatus","passed","failed","performanceSection","performance_level","recommendations","rec","detailedResults","detailed_results","result","questionResult","is_correct","correct","incorrect","questionResultHeader","question_number","resultIcon","questionResultText","answerComparison","user_answer","correct_answer","explanation","resultsActions","actionBtn","encodeURIComponent","_c","$RefreshReg$"],"sources":["C:/Users/utkar/Desktop/SkillCred Projects/AI_tutor/frontend/src/components/Quiz/QuizInterface.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport apiService from '../../utils/api';\r\nimport styles from './QuizInterface_enhanced.module.css';\r\n\r\nconst QuizInterface = () => {\r\n  const { language, topic } = useParams();\r\n  \r\n  // Quiz state\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [timeLeft, setTimeLeft] = useState(0);\r\n  const [quizResults, setQuizResults] = useState(null);\r\n  \r\n  // UI state\r\n  const [phase, setPhase] = useState('setup'); // setup, generating, active, completed, results\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  \r\n  // Quiz configuration\r\n  const [difficulty, setDifficulty] = useState('Easy');\r\n  const [numQuestions, setNumQuestions] = useState(5);\r\n\r\n  // Timer effect\r\n  useEffect(() => {\r\n    if (phase === 'active' && timeLeft > 0) {\r\n      const timer = setTimeout(() => {\r\n        setTimeLeft(timeLeft - 1);\r\n      }, 1000);\r\n      return () => clearTimeout(timer);\r\n    } else if (timeLeft === 0 && phase === 'active') {\r\n      handleSubmitQuiz();\r\n    }\r\n  }, [timeLeft, phase]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const generateQuiz = async () => {\r\n    try {\r\n      setPhase('generating');\r\n      setLoading(true);\r\n      setError('');\r\n      \r\n      const response = await apiService.generateQuiz(language, topic, difficulty, numQuestions);\r\n      \r\n      if (response.success) {\r\n        setQuiz(response);\r\n        setAnswers(new Array(response.questions.length).fill(''));\r\n        setTimeLeft(response.time_limit * 60); // Convert minutes to seconds\r\n        setPhase('active');\r\n      } else {\r\n        throw new Error('Failed to generate quiz');\r\n      }\r\n    } catch (error) {\r\n      setError(error.message || 'Failed to generate quiz. Please try again.');\r\n      setPhase('setup');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAnswerChange = (value) => {\r\n    const newAnswers = [...answers];\r\n    newAnswers[currentQuestion] = value;\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  const nextQuestion = () => {\r\n    if (currentQuestion < quiz.questions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    }\r\n  };\r\n\r\n  const previousQuestion = () => {\r\n    if (currentQuestion > 0) {\r\n      setCurrentQuestion(currentQuestion - 1);\r\n    }\r\n  };\r\n\r\n  const handleSubmitQuiz = async () => {\r\n    try {\r\n      setPhase('completed');\r\n      setLoading(true);\r\n      \r\n      const response = await apiService.submitQuiz(\r\n        quiz.quiz_id,\r\n        answers,\r\n        language,\r\n        topic,\r\n        difficulty\r\n      );\r\n      \r\n      setQuizResults(response);\r\n      setPhase('results');\r\n    } catch (error) {\r\n      setError('Failed to submit quiz. Please try again.');\r\n      setPhase('active');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const getDifficultyColor = (diff) => {\r\n    const colors = {\r\n      'Easy': '#4CAF50',\r\n      'Medium': '#FF9800',\r\n      'Hard': '#F44336',\r\n      'Expert': '#9C27B0'\r\n    };\r\n    return colors[diff] || '#666';\r\n  };\r\n\r\n  const restartQuiz = () => {\r\n    setQuiz(null);\r\n    setCurrentQuestion(0);\r\n    setAnswers([]);\r\n    setTimeLeft(0);\r\n    setQuizResults(null);\r\n    setPhase('setup');\r\n    setError('');\r\n  };\r\n\r\n  // Setup Phase\r\n  if (phase === 'setup') {\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.header}>\r\n          <Link to={`/dashboard`} className={styles.backLink}>\r\n            ← Back to Dashboard\r\n          </Link>\r\n          <h1 className={styles.title}>Quiz Setup</h1>\r\n        </div>\r\n\r\n        <div className={styles.setupCard}>\r\n          <div className={styles.topicInfo}>\r\n            <h2>{language} - {topic}</h2>\r\n            <p>Configure your quiz settings below:</p>\r\n          </div>\r\n\r\n          <div className={styles.configSection}>\r\n            <div className={styles.configGroup}>\r\n              <label className={styles.configLabel}>Difficulty Level:</label>\r\n              <div className={styles.difficultyOptions}>\r\n                {['Easy', 'Medium', 'Hard', 'Expert'].map((level) => (\r\n                  <button\r\n                    key={level}\r\n                    className={`${styles.difficultyBtn} ${difficulty === level ? styles.active : ''}`}\r\n                    onClick={() => setDifficulty(level)}\r\n                    style={{\r\n                      borderColor: difficulty === level ? getDifficultyColor(level) : '#ddd',\r\n                      backgroundColor: difficulty === level ? getDifficultyColor(level) : 'transparent',\r\n                      color: difficulty === level ? 'white' : getDifficultyColor(level)\r\n                    }}\r\n                  >\r\n                    {level}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n              <p className={styles.difficultyDescription}>\r\n                {difficulty === 'Easy' && 'Basic concepts with simple multiple choice questions'}\r\n                {difficulty === 'Medium' && 'Intermediate concepts with mixed question types'}\r\n                {difficulty === 'Hard' && 'Advanced concepts requiring deeper understanding'}\r\n                {difficulty === 'Expert' && 'Complex problems testing mastery of the topic'}\r\n              </p>\r\n            </div>\r\n\r\n            <div className={styles.configGroup}>\r\n              <label className={styles.configLabel}>Number of Questions:</label>\r\n              <select\r\n                className={styles.questionSelect}\r\n                value={numQuestions}\r\n                onChange={(e) => setNumQuestions(parseInt(e.target.value))}\r\n              >\r\n                <option value={3}>3 Questions (Quick)</option>\r\n                <option value={5}>5 Questions (Standard)</option>\r\n                <option value={8}>8 Questions (Comprehensive)</option>\r\n                <option value={10}>10 Questions (Extended)</option>\r\n              </select>\r\n              <p className={styles.timeEstimate}>\r\n                Estimated time: {((numQuestions * (difficulty === 'Easy' ? 2 : difficulty === 'Medium' ? 3 : difficulty === 'Hard' ? 5 : 8)) / 60 * 100) / 100} minutes\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            className={styles.generateBtn}\r\n            onClick={generateQuiz}\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Generating Quiz...' : 'Generate Quiz'}\r\n          </button>\r\n\r\n          {error && (\r\n            <div className={styles.error}>\r\n              {error}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Generating Phase\r\n  if (phase === 'generating') {\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.loadingCard}>\r\n          <div className={styles.spinner}></div>\r\n          <h2>Generating Your Quiz...</h2>\r\n          <p>Creating {numQuestions} {difficulty.toLowerCase()} questions about {topic}</p>\r\n          <div className={styles.loadingProgress}>\r\n            <div className={styles.progressBar}>\r\n              <div className={styles.progressFill}></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Active Quiz Phase\r\n  if (phase === 'active' && quiz) {\r\n    const question = quiz.questions[currentQuestion];\r\n    const progress = ((currentQuestion + 1) / quiz.questions.length) * 100;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.quizHeader}>\r\n          <div className={styles.quizInfo}>\r\n            <h2>{quiz.language} - {quiz.topic}</h2>\r\n            <span className={styles.difficulty} style={{ color: getDifficultyColor(quiz.difficulty) }}>\r\n              {quiz.difficulty}\r\n            </span>\r\n          </div>\r\n          <div className={styles.quizMeta}>\r\n            <div className={styles.timer}>\r\n              ⏱️ {formatTime(timeLeft)}\r\n            </div>\r\n            <div className={styles.questionCounter}>\r\n              {currentQuestion + 1} / {quiz.questions.length}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.progressContainer}>\r\n          <div className={styles.progressBar}>\r\n            <div \r\n              className={styles.progressFill} \r\n              style={{ width: `${progress}%` }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.questionCard}>\r\n          <div className={styles.questionHeader}>\r\n            <span className={styles.questionNumber}>Question {currentQuestion + 1}</span>\r\n            <span className={styles.questionType}>{question.type.toUpperCase()}</span>\r\n          </div>\r\n          \r\n          <div className={styles.questionText}>\r\n            {question.question}\r\n          </div>\r\n\r\n          {question.type === 'mcq' && (\r\n            <div className={styles.optionsContainer}>\r\n              {question.options.map((option, index) => (\r\n                <label key={index} className={styles.optionLabel}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name={`question-${currentQuestion}`}\r\n                    value={index}\r\n                    checked={answers[currentQuestion] === index}\r\n                    onChange={() => handleAnswerChange(index)}\r\n                    className={styles.optionRadio}\r\n                  />\r\n                  <span className={styles.optionText}>{option}</span>\r\n                </label>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {question.type === 'coding' && (\r\n            <div className={styles.codingContainer}>\r\n              <textarea\r\n                className={styles.codeTextarea}\r\n                placeholder=\"Write your code here...\"\r\n                value={answers[currentQuestion] || ''}\r\n                onChange={(e) => handleAnswerChange(e.target.value)}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className={styles.navigationButtons}>\r\n          <button\r\n            className={styles.navBtn}\r\n            onClick={previousQuestion}\r\n            disabled={currentQuestion === 0}\r\n          >\r\n            ← Previous\r\n          </button>\r\n          \r\n          {currentQuestion === quiz.questions.length - 1 ? (\r\n            <button\r\n              className={styles.submitBtn}\r\n              onClick={handleSubmitQuiz}\r\n            >\r\n              Submit Quiz\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className={styles.navBtn}\r\n              onClick={nextQuestion}\r\n            >\r\n              Next →\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Results Phase\r\n  if (phase === 'results' && quizResults) {\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.resultsCard}>\r\n          <div className={styles.resultsHeader}>\r\n            <h2>Quiz Results</h2>\r\n            <div className={styles.scoreDisplay}>\r\n              <div className={styles.mainScore}>\r\n                {quizResults.score} / {quizResults.total_questions}\r\n              </div>\r\n              <div className={styles.percentage}>\r\n                {quizResults.percentage}%\r\n              </div>\r\n              <div className={`${styles.passStatus} ${quizResults.passed ? styles.passed : styles.failed}`}>\r\n                {quizResults.passed ? '✅ Passed' : '❌ Failed'}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.performanceSection}>\r\n            <h3>Performance: {quizResults.performance_level}</h3>\r\n            <div className={styles.recommendations}>\r\n              <h4>Recommendations:</h4>\r\n              <ul>\r\n                {quizResults.recommendations.map((rec, index) => (\r\n                  <li key={index}>{rec}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.detailedResults}>\r\n            <h3>Question Review:</h3>\r\n            {quizResults.detailed_results.map((result, index) => (\r\n              <div key={index} className={`${styles.questionResult} ${result.is_correct ? styles.correct : styles.incorrect}`}>\r\n                <div className={styles.questionResultHeader}>\r\n                  <span>Question {result.question_number}</span>\r\n                  <span className={styles.resultIcon}>\r\n                    {result.is_correct ? '✅' : '❌'}\r\n                  </span>\r\n                </div>\r\n                <div className={styles.questionResultText}>\r\n                  {result.question}\r\n                </div>\r\n                {result.options && (\r\n                  <div className={styles.answerComparison}>\r\n                    <div>Your answer: {result.options[result.user_answer]}</div>\r\n                    <div>Correct answer: {result.options[result.correct_answer]}</div>\r\n                  </div>\r\n                )}\r\n                <div className={styles.explanation}>\r\n                  <strong>Explanation:</strong> {result.explanation}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className={styles.resultsActions}>\r\n            <button\r\n              className={styles.actionBtn}\r\n              onClick={restartQuiz}\r\n            >\r\n              Take Quiz Again\r\n            </button>\r\n            <Link\r\n              to={`/tutor/${language}/${encodeURIComponent(topic)}`}\r\n              className={styles.actionBtn}\r\n            >\r\n              Review Tutorial\r\n            </Link>\r\n            <Link\r\n              to=\"/dashboard\"\r\n              className={styles.actionBtn}\r\n            >\r\n              Back to Dashboard\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Loading state\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.loadingCard}>\r\n        <div className={styles.spinner}></div>\r\n        <p>Loading quiz...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}